const fs=require("fs");class SyncFile{static read_file(e){try{return console.log(`✓ SyncFile.read_file \t\t\t—▶ File ${e} has been read!`),fs.readFileSync(e,"utf8")}catch(e){console.error("✕ SyncFile.read_file \t\t\t—▶ Ups! Something went wrong!\n",e)}}static rm(e){try{fs.rmSync(e,{recursive:!0}),console.log(`✓ SyncFile.rm \t\t\t—▶ ${e} deleted successfully!`)}catch(e){console.error("✕ SyncFile.rm \t\t\t—▶ Ups! Something went wrong!\n",e)}}static copy_file(e,t){try{fs.copyFileSync(e,t),console.log(`✓ SyncFile.copy_file \t\t\t—▶ File ${e} has been copied!`)}catch(e){console.error("✕ SyncFile.copy_file \t\t\t—▶ There was a problem executing!\nAn error occurred while copying the file!\n",e)}}static write_file(e,t){try{fs.writeFileSync(e,t,"utf8"),console.log(`✓ SyncFile.write_file \t\t\t—▶ File ${e} has been written!`)}catch(e){console.error("✕ SyncFile.write_file \t\t\t—▶ There was a problem executing!\nAn error occurred while writing the file!\n",e)}}static file_there(e){try{const t=fs.existsSync(e);return t?(console.log(`✓ SyncFile.file_there \t\t\t—▶ File ${e} is there!`),t):void console.error("✕ SyncFile.file_there \t\t\t—▶ File is not there")}catch(e){console.error("✕ SyncFile.file_there \t\t\t—▶ Ups! Something went wrong!\n",e)}}static make_dir(e){try{fs.mkdirSync(e,{recursive:!0}),console.log(`✓ SyncFile.make_dir \t\t\t—▶ Directory ${e} has been created!`)}catch(e){console.error("✕ SyncFile.make_dir \t\t\t—▶ There was a problem while running!\nAn error occurred while creating the folder.\n",e)}}static read_dir(e){try{return console.log(`✓ SyncFile.read_dir \t\t\t—▶ Directory ${e} has been read!`),fs.readdirSync(e)}catch(e){console.error("✕ SyncFile.read_dir \t\t\t—▶ There was a problem while running!\nAn error occurred while reading the directory.\n",e)}}static read_json(e){try{const t=SyncFile.read_file(e);return console.log(`✓ SyncFile.read_json \t\t\t—▶ File ${e} has been read!`),JSON.parse(t)}catch(e){console.error(`✕ SyncFile.read_json \t\t\t—▶ Ups! Something went wrong on filer/SyncFile.js\n${e}`)}}static update_json(e,t){try{fs.writeFileSync(e,JSON.stringify(t,null,2),"utf8"),console.log(`✓ SyncFile.update_json \t\t\t—▶ Json File ${e} has been updated!`)}catch(e){console.error(`✕ SyncFile.update_json \t\t\t—▶ Ups! Something went wrong!\n ${e}`)}}}module.exports=SyncFile;