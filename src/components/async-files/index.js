const fs=require("fs").promises;class AsyncFile{static async read_file(e){try{return console.log(`✅ [--filer.AsyncFile.read_file--] - File ${e} has been read!`),await fs.readFile(e,"utf8")}catch(e){console.error("❌ [--filer.AsyncFile.read_file--] - Ups! Something went wrong!\n",e)}}static async rm(e){try{await fs.rm(e,{recursive:!0}),console.log(`✅ [--filer.AsyncFile.rm--] - ${e} deleted successfully!`)}catch(e){console.error("❌ [--filer.AsyncFile.rm--] - Ups! Something went wrong!\n",e)}}static async copy_file(e,r){try{await fs.copyFile(e,r),console.log(`✅ [--filer.AsyncFile.copy_file--] - File ${e} has been copied!`)}catch(e){console.error("❌ [--filer.AsyncFile.copy_file--] - There was a problem executing!\nAn error occurred while copying the file!\n",e)}}static async write_file(e,r){try{await fs.writeFile(e,r,"utf8"),console.log(`✅ [--filer.AsyncFile.write_file--] - File ${e} has been written!`)}catch(e){console.error("❌ [--filer.AsyncFile.write_file--] - There was a problem executing!\nAn error occurred while writing the file!\n",e)}}static async file_there(e){try{fs.access(e,fs.constants.F_OK,(()=>(err?console.error("❌ [--filer.AsyncFile.file_there--] - File is not there"):console.log(`✅ [--filer.AsyncFile.file_there--] - File ${e} is there!`),err)))}catch(e){console.error("❌ [--filer.AsyncFile.file_there--] - Ups! Something went wrong!\n",e)}}static async make_dir(e){try{await fs.mkdir(e,{recursive:!0}),console.log(`✅ [--filer.AsyncFile.make_dir--] - Directory ${e} has been created!`)}catch(e){console.error("❌ [--filer.AsyncFile.make_dir--] - There was a problem while running!\nAn error occurred while creating the folder.\n",e)}}static async read_dir(e){try{return console.log(`✅ [--filer.AsyncFile.read_dir--] - Directory ${e} has been read!`),await fs.readdir(e)}catch(e){console.error("❌ [--filer.AsyncFile.read_dir--] - There was a problem while running!\nAn error occurred while reading the directory.\n",e)}}static async read_json(e){try{const r=await AsyncFile.read_file(e);return console.log(`✅ [--filer.AsyncFile.read_json--] - File ${e} has been read!`),JSON.parse(r)}catch(e){console.error(`❌ [--filer.AsyncFile.read_json--] - Ups! Something went wrong on filer/AsyncFile.js\n${e}`)}}static async update_json(e,r){try{await fs.writeFile(e,JSON.stringify(r,null,2),"utf8"),console.log(`✅ [--filer.AsyncFile.update_json--] - Json File ${e} has been updated!`)}catch(e){console.error(`❌ [--filer.AsyncFile.update_json--] - Ups! Something went wrong!\n ${e}`)}}}module.exports=AsyncFile;